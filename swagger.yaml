openapi: 3.0.0
info:
  version: 1.0.0
  title: JSP API
security:
  - bearerAuth: []
paths:

  /system/ping:
    get:
      summary: System ping endpoint
      operationId: ping
      tags:
        - system
      responses:
        '200':
          description: System ping response
          content:
            text/plain:
              schema:
                description: Returns PING
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  
  /orders:
    get:
      summary: List orders
      operationId: listOrders
      tags:
       - Orders
      responses:
        '200':
          description: An array of orders
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Order'
        '400':
          description: Invalid request error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized request error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    
    post:
      summary: Create a new order
      operationId: createOrder
      tags:
        - Orders
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Order'
      responses:
        '200':
          description: A created order
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
        '400':
          description: Invalid request error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized request error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'      
  
  /orders/{orderId}:
    get:
      summary: Find an order
      operationId: findOrder
      parameters: 
        - name: orderId
          in: path
          description: Id of an order to find
          required: true
          schema:
            type: string
            format: uuid
      tags:
       - Orders
      responses:
        '200':
          description: A found order
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
        '400':
          description: Invalid request error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized request error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
                
    put:
      summary: Update an order
      operationId: updateOrder
      parameters: 
        - name: orderId
          in: path
          description: Id of an order to update
          required: true
          schema:
            type: string
            format: uuid
      tags:
        - Orders
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Order'
      responses:
        '200':
          description: An updated order
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
        '400':
          description: Invalid request error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized request error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error' 
                
    delete:
      summary: Delete an order
      operationId: deleteOrder
      parameters: 
        - name: orderId
          in: path
          description: Id of an order to dlete
          required: true
          schema:
            type: string
            format: uuid
      tags:
       - Orders
      responses:
        '204':
          description: An empty response indicating a successful removal
        '400':
          description: Invalid request error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized request error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  
  /doors:
    get:
      summary: List doors
      operationId: listDoors
      tags:
       - Doors
      responses:
        '200':
          description: An array of doors
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Door'
        '400':
          description: Invalid request error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized request error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  
  /doors/{doorId}:
    get:
      summary: Find a door 
      operationId: findDoor
      parameters: 
        - name: doorId
          in: path
          description: Id of an info object to find
          required: true
          schema:
            type: string
            format: uuid
      tags:
       - Doors
      responses:
        '200':
          description: Found door
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Door'
        '400':
          description: Invalid request error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized request error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /counterTops:
    get:
      summary: List countertops
      operationId: listCounterTops
      tags:
       - CounterTops
      responses:
        '200':
          description: An array of countertops
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CounterTop'
        '400':
          description: Invalid request error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized request error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  
  /counterTops/{counterTopId}:
    get:
      summary: Find a countertop
      operationId: findCounterTop
      parameters: 
        - name: counterTopId
          in: path
          description: Id of an countertop find
          required: true
          schema:
            type: string
            format: uuid
      tags:
       - CounterTops
      responses:
        '200':
          description: A found countertop
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CounterTop'
        '400':
          description: Invalid request error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized request error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /handles:
    get:
      summary: List handles
      operationId: listHandles
      tags:
       - Handles
      responses:
        '200':
          description: An array of handles
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Handle'
        '400':
          description: Invalid request error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized request error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  
  /handles/{handleId}:
    get:
      summary: Find a handle
      operationId: findHandle
      parameters: 
        - name: handleId
          in: path
          description: Id of an handle to find
          required: true
          schema:
            type: string
            format: uuid
      tags:
       - Handles
      responses:
        '200':
          description: A found handle
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Handle'
        '400':
          description: Invalid request error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized request error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /drawers:
    get:
      summary: List drawer infos
      operationId: listDrawerInfos
      tags:
       - Drawers
      responses:
        '200':
          description: An array of drawer infos
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DrawersInfo'
        '400':
          description: Invalid request error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized request error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  
  /drawers/{drawersInfoId}:
    get:
      summary: Find a drawers info
      operationId: findDrawersInfo
      parameters: 
        - name: drawersInfoId
          in: path
          description: Drawers info id
          required: true
          schema:
            type: string
            format: uuid
      tags:
       - Drawers
      responses:
        '200':
          description: A found drawers info
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DrawersInfo'
        '400':
          description: Invalid request error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized request error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
 
  /genericProducts:
    get:
      summary: List generic products
      operationId: listGenericProducts
      tags:
       - GenericProducts
      parameters: 
        - name: productType
          in: query
          description: Filter products by their type
          required: false
          schema:
            type: string
      responses:
        '200':
          description: An array of products
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/GenericProduct'
        '400':
          description: Invalid request error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized request error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  
  /genericProducts/{productId}:
    get:
      summary: Find a generic product
      operationId: findGenericProduct
      parameters: 
        - name: productId
          in: path
          description: Product id
          required: true
          schema:
            type: string
            format: uuid
      tags:
       - GenericProducts
      responses:
        '200':
          description: A found product
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericProduct'
        '400':
          description: Invalid request error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized request error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
                
  /installations:
    get:
      summary: List installations
      operationId: listInstallations
      tags:
        - Installations
      responses:
        '200':
          description: An array of installations
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Installation'
        '400':
          description: Invalid request error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized request error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  
  /installations/{installationId}:
    get:
      summary: Find an installation
      operationId: findInstallation
      parameters: 
        - name: installationId
          in: path
          description: Installation id
          required: true
          schema:
            type: string
            format: uuid
      tags:
       - Installations
      responses:
        '200':
          description: Found installation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Installation'
        '400':
          description: Invalid request error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized request error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  
  /spines:
    get:
      summary: List ispines
      operationId: listSpines
      tags:
        - Spines
      responses:
        '200':
          description: An array of spines
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Spine'
        '400':
          description: Invalid request error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized request error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  
  /spines/{spineId}:
    get:
      summary: Find a spine
      operationId: findSpine
      parameters: 
        - name: spineId
          in: path
          description: Spine id
          required: true
          schema:
            type: string
            format: uuid
      tags:
       - Spine
      responses:
        '200':
          description: Found spine
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Spine'
        '400':
          description: Invalid request error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized request error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  
  
  /files:
    get:
      summary: List files
      operationId: listFiles
      tags:
        - Files
      responses:
        '200':
          description: An array of files
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/FileInformation'
        '400':
          description: Invalid request error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized request error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
                
  /files/{fileId}:
    get:
      summary: Find a file
      operationId: findFile
      parameters: 
        - name: fileId
          in: path
          description: Id of a file to find
          required: true
          schema:
            type: string
            format: uuid
      tags:
       - Files
      responses:
        '200':
          description: A found file
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FileInformation'
        '400':
          description: Invalid request error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized request error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /files/{fileId}/download:
    get:
      summary: Download a file
      operationId: downloadFile
      parameters: 
        - name: fileId
          in: path
          description: File id
          required: true
          schema:
            type: string
            format: uuid
      tags:
        - Files
      responses:
        '200':
          description: Downloaded file
          content:
            application/octet-stream:
              schema:
                type: string
                format: binary
        '400':
          description: Invalid request error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized request error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

  schemas:
    Error:
      type: object
      required:
        - code
        - message
      properties:
        code:
          type: integer
          format: int32
        message:
          type: string
    
    CounterTop:
      type: object
      required:
        - modelName
        - thickness
        - type
      properties:
        id:
          type: string
          format: uuid
        modelName:
          type: string
        thickness:
          type: string
        type:
          $ref: '#/components/schemas/CounterTopType'
    

    Door:
      type: object
      required:
        - modelName
        - doorColor
        - isGlassDoor
        - glassColor
      properties:
        id:
          type: string
          format: uuid
        modelName:
          type: string
        doorColor:
          type: string
        isGlassDoor:
          type: boolean
        glassColor:
          type: string

    Handle:
      type: object
      required:
        - doorModelName
        - color
        - markedInImages
      properties:
        id: 
          type: string
          format: uuid
        doorModelName:
          type: string
        color:
          type: string
        markedInImages:
          type: boolean
    
    DrawersInfo:
      type: object
      required:
        - trashbins
        - markedInImages
        - additionalInformation
        - cutleryCompartments
      properties:
        id:
          type: string
          format: uuid
        trashbins:
          type: string
        cutleryCompartments:
          type: string
        markedInImages:
          type: boolean
        additionalInformation:
          type: string
          
    CounterTopType:
      type: string
      enum:
        - TR
        - ST
        - ABS
        
    GenericProduct:
      type: object
      required:
        - name
        - supplier
        - type
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
        supplier:
          type: string
        type:
          $ref: '#/components/schemas/GenericProductType'
    
    GenericProductType:
      type: string
      enum:
        - DOMESTIC_APPLIANCE
        - SINK
        - ELECTRIC
        - INTERMEDIATE_SPACE
        - OTHER
    
    Installation:
      type: object
      required:
       - isCustomerInstallation
       - additionalInforamtion
      properties:
        id:
          type: string
          format: uuid
        isCustomerInstallation:
          type: boolean
        additionalInformation:
          type: string
    
    FileInformation:
      type: object
      required:
        - name
      properties:
        id: 
          type: string
          format: uuid
        name:
          type: string
        createdAt:
          type: string
          format: date-time
        creatorId:
          type: string
          format: uuid
        modifiedAt:
          type: string
          format: date-time
        modifierId:
          type: string
          format: uuid
    
    OrderInfo:
      type: object
      required:
        - customer
        - email
        - deliveryAddress
        - homeAddress
        - phoneNumber
        - city
        - socialMediaPermission
        - room
        - deliveryTime
        - billingAddress
        - isHomeBillingAddress
        - additionalInformation
      properties:
        customer:
          type: string
        email:
          type: string
        deliveryAddress:
          type: string
        homeAddress:
          type: string
        billingAddress:
          type: string
        isHomeBillingAddress:
          type: boolean
        phoneNumber:
          type: string
        city:
          type: string
        socialMediaPermission:
          type: boolean
        room:
          type: string
        deliveryTime:
          type: string
          format: date-time
        additionalInformation:
          type: string
    
    Spine:
      type: object
      required:
        - color
        - cornerStripe
        - plinth
        - extraSide
      properties:
        id:
          type: string
          format: uuid
        color:
          type: string
        cornerStripe:
          type: string
        plinth:
          type: string
        extraSide:
          type: string
    
    Order:
      type: object
      required:
        - orderInfo
        - spine
        - spineAdditionalInformation
        - doors
        - doorsAdditionalInformation
        - handles
        - handlesAdditionalInformation
        - counterTops
        - counterTopsAdditionalInformation
        - drawersInfo
        - domesticAppliance
        - domesticAppliancesAdditionalInformation
        - otherProducts
        - otherProductsAdditionalInformation
        - intermediateSpaces
        - intermediataeSpacesAdditionalInformation
        - sinks
        - sinksAdditionalInformation
        - electricProducts
        - electricProductsAdditionalInformation
        - installation
        - moreInformation
        - customerFIles
        - orderFiles
      properties:
        id:
          type: string
          format: uuid
        orderInfo:
          $ref: '#/components/schemas/OrderInfo'
        spine:
           $ref: '#/components/schemas/Spine'
        spineAdditionalInformation:
          type: string
        doors:
          type: array
          items:
            $ref: '#/components/schemas/Door'
        doorsAdditionalInformation:
          type: string
        handles:
          type: array
          items:
            $ref: '#/components/schemas/Handle'
        handlesAdditionalInformation:
          type: string
        counterTops:
          type: array
          items:
            $ref: '#/components/schemas/CounterTop'
        counterTopsAdditionalInformation:
          type: string
        drawersInfo:
          $ref: '#/components/schemas/DrawersInfo'
        domesticAppliances:
          type: array
          items:
            $ref: '#/components/schemas/GenericProduct'
        domesticAppliancesAdditionalInformation:
          type: string
        otherProducts:
          type: array
          items:
            $ref: '#/components/schemas/GenericProduct'
        otherProductsAdditionalInformation:
          type: string
        intermediateSpaces:
          type: array
          items:
            $ref: '#/components/schemas/GenericProduct'
        intermediateSpacesAdditionalInformation:
          type: string
        sinks:
          type: array
          items:
            $ref: '#/components/schemas/GenericProduct'
        sinksAdditionalInformation:
          type: string
        electricProducts:
          type: array
          items:
            $ref: '#/components/schemas/GenericProduct'
        electricProductsAdditionalInformation:
          type: string
        installation:
          $ref: '#/components/schemas/Installation'
        moreInformation:
          type: string
        customerFiles:
          type: array
          items:
             $ref: '#/components/schemas/FileInformation'
        orderFiles:
          type: array
          items:
             $ref: '#/components/schemas/FileInformation'
        createdAt:
          type: string
          format: date-time
        creatorId:
          type: string
          format: uuid
        modifiedAt:
          type: string
          format: date-time
        modifierId:
          type: string
          format: uuid
        
